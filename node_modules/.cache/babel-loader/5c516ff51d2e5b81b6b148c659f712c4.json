{"ast":null,"code":"var _jsxFileName = \"/Users/viviana/Desktop/ejercicios/luis-cabrera/app-breaking-bad/src/App.js\",\n    _s = $RefreshSig$();\n\n// ahora haremos la actualizacion desde el boto haciendo click, vamos la boton y agreguemps el atrributo onclick\n// alli ejecutaremos una funcion e \n// implementaremos unloading o un spiner para ello implementaremos un nuevo estado\nimport { useState, useEffect } from \"react\";\nimport { Quote } from \"./componetes/Quote\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialQuote = {\n  text: 'Quote',\n  author: 'Author'\n};\n\nfunction App() {\n  _s();\n\n  const [quote, setQuote] = useState(initialQuote); // debemos crear esta initialQuote la creamo como un arreglo\n\n  const [loading, setLoading] = useState(true); // ahora haremos un operador ternario , vamos donde imprimimos la quote\n\n  const updateQuote = async () => {\n    const url = 'https://www.breakingbadapi.com/api/quote/random';\n    const res = await fetch(url);\n    const [newQuote] = await res.json();\n    const {\n      quote: text,\n      author\n    } = newQuote;\n    setQuote({\n      text,\n      author\n    });\n  };\n\n  useEffect(() => {\n    updateQuote();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://upload.wikimedia.org/wikipedia/commons/7/77/Breaking_Bad_logo.svg\",\n      alt: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => updateQuote(),\n      children: \"Get Another\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(Quote, {\n      quote: quote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 41\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"W9EkB/Mrhgdtk6dp9xxkbzrzS10=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Quote","initialQuote","text","author","App","quote","setQuote","loading","setLoading","updateQuote","url","res","fetch","newQuote","json"],"sources":["/Users/viviana/Desktop/ejercicios/luis-cabrera/app-breaking-bad/src/App.js"],"sourcesContent":["// ahora haremos la actualizacion desde el boto haciendo click, vamos la boton y agreguemps el atrributo onclick\n// alli ejecutaremos una funcion e \n// implementaremos unloading o un spiner para ello implementaremos un nuevo estado\nimport { useState, useEffect } from \"react\";\nimport { Quote } from \"./componetes/Quote\";\n\nconst initialQuote = {\n  text: 'Quote',\n  author: 'Author'\n}\n\nfunction App() {\n  const [quote, setQuote] = useState(initialQuote) // debemos crear esta initialQuote la creamo como un arreglo\n  const [loading, setLoading] = useState(true) // ahora haremos un operador ternario , vamos donde imprimimos la quote\n\n  const updateQuote = async () => {\n    const url = 'https://www.breakingbadapi.com/api/quote/random'\n    const res = await fetch(url)\n    const [newQuote] = await res.json()\n    const { quote: text, author } = newQuote\n\n    setQuote({\n      text,\n      author\n    })\n  }\n\n  useEffect(() => {\n    updateQuote()\n  }, [])\n\n  return (\n    <div className=\"app\">\n      <img\n        src=\"https://upload.wikimedia.org/wikipedia/commons/7/77/Breaking_Bad_logo.svg\"\n        alt=\"logo\"\n      />\n      {/* <button onClick={alert('click')}>Get Another</button> */}\n      {/* <button onClick={() => alert('click')}>Get Another</button> */}\n      {/* ahora llamaremos la funcion que creamos en vez del alert */}\n      <button onClick={() => updateQuote()}>Get Another</button>\n\n      {/* podemos ver que el alert se ejecuta inmediatamente , y eso es por que los parentesis\n      amarillos esta indicando que se debe ejecutar directamente por lo tanto para evitar ese comportamiento la llamamos con funcion flecha*/}\n\n      {/* operador ternario  y decimos si el loadng esta en true  esta cargando asi que muestrame esl texto loading\n      y si esta en false quiere decir que ya no esta cargando asi que muestra el componente quote por ello mas abajo lo deje \n      comentado  ya que lo deje aca\n      ahora solo se muestra loading asi que cambiaremos el valor de trure a false*/}\n      {\n        loading ? <h1>Loading...</h1> : <Quote quote={quote} />\n      }\n      {/* <Quote quote={quote} /> */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA;AACA;AACA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,KAAT,QAAsB,oBAAtB;;AAEA,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,OADa;EAEnBC,MAAM,EAAE;AAFW,CAArB;;AAKA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACG,YAAD,CAAlC,CADa,CACoC;;EACjD,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC,CAFa,CAEgC;;EAE7C,MAAMW,WAAW,GAAG,YAAY;IAC9B,MAAMC,GAAG,GAAG,iDAAZ;IACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB;IACA,MAAM,CAACG,QAAD,IAAa,MAAMF,GAAG,CAACG,IAAJ,EAAzB;IACA,MAAM;MAAET,KAAK,EAAEH,IAAT;MAAeC;IAAf,IAA0BU,QAAhC;IAEAP,QAAQ,CAAC;MACPJ,IADO;MAEPC;IAFO,CAAD,CAAR;EAID,CAVD;;EAYAJ,SAAS,CAAC,MAAM;IACdU,WAAW;EACZ,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MACE,GAAG,EAAC,2EADN;MAEE,GAAG,EAAC;IAFN;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MAAQ,OAAO,EAAE,MAAMA,WAAW,EAAlC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARF,EAkBIF,OAAO,gBAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAH,gBAAyB,QAAC,KAAD;MAAO,KAAK,EAAEF;IAAd;MAAA;MAAA;MAAA;IAAA,QAlBpC;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD;;GA5CQD,G;;KAAAA,G;AA8CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}