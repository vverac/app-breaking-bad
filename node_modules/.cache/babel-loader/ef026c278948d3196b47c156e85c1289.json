{"ast":null,"code":"var _jsxFileName = \"/Users/viviana/Desktop/ejercicios/luis-cabrera/app-breaking-bad/src/App.js\",\n    _s = $RefreshSig$();\n\n// ahora realiceremos la peticion a la api para que nuestro state quote se carge la primera vez desde la api\n// haremos la llmada a la api para la primera vez que se renderice el componente\n//  y el hook que nos permmite hacer esta tarea es el useEffect\nimport { useState, useEffect } from \"react\";\nimport { Quote } from \"./componetes/Quote\"; // nuestro estado quote tendra 2  parametros\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialQuote = {\n  text: 'Quote',\n  author: 'Author'\n};\n\nfunction App() {\n  _s();\n\n  const [quote, setQuote] = useState(initialQuote); // debemos crear esta initialQuote la creamo como un arreglo\n  // para usar useEffect lo llamaos aca , le pasamos una funcion o callback que se ejecutara cuando algun parametro de nuestro arreglo de dependencias cambie\n\n  useEffect(() => {\n    // hacemos la peticion a la api, creamo suna cte que almacene la url donde haremos la peticion\n    const url = 'https//: www.breakingbadapi.com/api/quote/random';\n  }, []); //en este caso no tendremos ninguna dependencia que estar escuchando , dejamos este arreglo vacio con el objetivo qu ela funcion se ejecute la primera ves\n  // que se renderiza el componente y no se vuelva a ejecutar  \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://upload.wikimedia.org/wikipedia/commons/7/77/Breaking_Bad_logo.svg\",\n      alt: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Get Another\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Quote, {\n      quote: quote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"L4WiA/vSk81lQ+5xPRWwyYGYB3g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Quote","initialQuote","text","author","App","quote","setQuote","url"],"sources":["/Users/viviana/Desktop/ejercicios/luis-cabrera/app-breaking-bad/src/App.js"],"sourcesContent":["\n// ahora realiceremos la peticion a la api para que nuestro state quote se carge la primera vez desde la api\n// haremos la llmada a la api para la primera vez que se renderice el componente\n//  y el hook que nos permmite hacer esta tarea es el useEffect\n\nimport { useState, useEffect } from \"react\";\nimport { Quote } from \"./componetes/Quote\";\n\n\n// nuestro estado quote tendra 2  parametros\nconst initialQuote = {\n  text: 'Quote',\n  author: 'Author'\n}\n\nfunction App() {\n  const [quote, setQuote] = useState(initialQuote) // debemos crear esta initialQuote la creamo como un arreglo\n\n  // para usar useEffect lo llamaos aca , le pasamos una funcion o callback que se ejecutara cuando algun parametro de nuestro arreglo de dependencias cambie\n  useEffect(() => {\n\n\n    // hacemos la peticion a la api, creamo suna cte que almacene la url donde haremos la peticion\n    const url = 'https//: www.breakingbadapi.com/api/quote/random'\n\n  }, []) //en este caso no tendremos ninguna dependencia que estar escuchando , dejamos este arreglo vacio con el objetivo qu ela funcion se ejecute la primera ves\n  // que se renderiza el componente y no se vuelva a ejecutar  \n\n\n  return (\n    <div className=\"app\">\n      <img\n        src=\"https://upload.wikimedia.org/wikipedia/commons/7/77/Breaking_Bad_logo.svg\"\n        alt=\"logo\"\n      />\n      <button>Get Another</button>\n\n      {/* le decimos al componente : recibe un quote que tiene el valor de nuestro estado quote  para enviarlo a quote.js*/}\n      <Quote quote={quote} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AACA;AACA;AACA;AAEA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,KAAT,QAAsB,oBAAtB,C,CAGA;;;AACA,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,OADa;EAEnBC,MAAM,EAAE;AAFW,CAArB;;AAKA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACG,YAAD,CAAlC,CADa,CACoC;EAEjD;;EACAF,SAAS,CAAC,MAAM;IAGd;IACA,MAAMQ,GAAG,GAAG,kDAAZ;EAED,CANQ,EAMN,EANM,CAAT,CAJa,CAUN;EACP;;EAGA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MACE,GAAG,EAAC,2EADN;MAEE,GAAG,EAAC;IAFN;MAAA;MAAA;MAAA;IAAA,QADF,eAKE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALF,eAQE,QAAC,KAAD;MAAO,KAAK,EAAEF;IAAd;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;GA1BQD,G;;KAAAA,G;AA4BT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}